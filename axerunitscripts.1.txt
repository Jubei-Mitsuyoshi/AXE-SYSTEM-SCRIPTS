initscripts(1)
==============

NAME[[N]]
---------
initscripts - System initialization scripts

DESCRIPTION[[D]]
----------------
Set of *Bash* scripts to bring the system up in usable state with the help of *sysvinit*

OVERVIEW[[O]]
-------------
Every *Operating System* requires some sort of process control initialization program
which brings the system up to state in which the user can operate, *sysvinit* is one
of them and is Linux specifiec. But it can not handle the process on itself alone thus 
the *initscripts* assist it to do its job.

*sysvinit* executes different programs in different stages (runlevels) which breaks down
the whole process so it fits different use cases (such as administration and repairs),
there are four ('4') scripts in that matter:

    - 'rc.sysinit': system initialization
    - 'rc.single': single-user mode
    - 'rc.multi': multi-user mode
    - 'rc.shutdown': system shutdown (halt or reboot)

'rc.sysinit' is first script that is executed. It makes sure that all preperations are done
on the system environment. Pseudo filesystems, devices nodes, environmental variables and
others are initialized to sane defaults.

'rc.single' is the second to be executed (if asigned). Its purpose is maintly as rescue
environment in which the Administrator of system may perform repairs, large scail changes
or other major task that no other user should be involved in.

'rc.multi' (usualy) continues where 'rc.sysinit' left off and makes additional enviromental
changes. One of them is to start the system daemons.

'rc.shutdown' is responsible to halt or reboot the system without breakage such as filesystem
inconsistency. It is almost the same as 'rc.sysinit' but in reverse order.

But there is a reason why those are *Bash* scripts and not *C*/*C++* binaries or something
else, that is portability, share-code feature, and most of all easily hackable by anyone who
wants to get involved with it and contribute. This is done by providing a common file
'/etc/rc.d/functions' which holds functions and sane environmental variable. Among the other
things it is also used by the deamons which should run on the system to avoid dublicating code
functionality.

CONFIGURATION[[C]]
------------------
Configring the *initscripts* behavior is done via a single file - '/etc/rc.conf'. More about
that in its manual page *rc.conf*(5). If you want to go deeper into this you will have to take
a look at *boot*(7), *init*(8) and/or *inittab*(5)


FUNCTIONS[[f]]
--------------
The '/etc/rc.d/functions' file is used by all initialization scripts (see overview) to be source
of all code that is shared among them, provides extra functions for the daemons and other
third-party scripts and tools. The functions which are defind in '/etc/rc.d/functions' are grouped
in the format:

'group_program_action'

    - 'group': group of functions with simmilar functionality, three ('3') characters string
    - 'program': program to be executed, one ('1') word string
    - 'action': action to be taken by the program, one ('1') word string

All of those do not contain special characters to avoid confusion and to be easy to pick up.

HOOKS[[H]]
----------
Functions can be used to include custom code in various places in the *initscripts*. Those
functions reside in '/etc/rc.d/functions.d'. The format is *Bash* and should follow the example:

function_name() { ... }

add_hook 'hook' function_name

where 'hook' is the stage in which this function should be inserted and executed. Currently, the
following hooks exist:

    - 'sysinit_start': at the beginning of 'rc.sysinit'
    - 'sysinit_sysctl': before the Kernel paramters are configured
    - 'sysinit_udevstart': before udev is launched
    - 'sysinit_modules': before the user-specified modules are loaded
    - 'sysinit_udevsettle': before uevents are settled
    - 'sysinit_hwclock': before system time is adjusted
    - 'sysinit_swap': before Swap partitions are activated
    - 'sysinit_dmraid': before FakeRAID devices are activated
    - 'sysinit_btrfs': before BTRFS partitions are activated
    - 'sysinit_lvm': before LVM partitions are activated
    - 'sysinit_fsck': before filesystem check are performed
    - 'sysinit_remount': before Root filesystem is remounted read-write
    - 'sysinit_leftovers': before leftover-files are removed
    - 'sysinit_seed': before random-seed is restored
    - 'sysinit_end': at the end of 'rc.sysinit'

    - 'single_start': at the beginning of 'rc.single'
    - 'single_daemons':  before all daemons are stopped
    - 'single_killall': before all processes are killed
    - 'single_leftovers': before leftover-files are removed
    - 'single_interact': before interactive program is launched (Shell)
    - 'single_end': at the end of 'rc.single'

    - 'multi_start': at the beginning of 'rc.multi', before Consoles are setuped
    - 'multi_locale': before locales are setuped
    - 'multi_timezone': before Time Zone is setuped
    - 'multi_consolefont': before Console fonts are setuped
    - 'multi_consolemap': before Console map is setuped
    - 'multi_keyboardmap': before Keyboard map is setuped
    - 'multi_hostname': before hostname is setuped
    - 'multi_loopback': before loopback interface is broght up
    - 'multi_mount': before all local filesystems are mounted
    - 'multi_daemons': before automatic daemons are started
    - 'multi_end': at the end of 'rc.multi'

    - 'shutdown_start': at the beginning of 'rc.shutdown'
    - 'shutdown_seed': before random-seed is saved
    - 'shutdown_timezone': before Time Zone is setuped
    - 'shutdown_lvm': before LVM partitions are deactivated
    - 'shutdown_udev': before udev is stopped
    - 'shutdown_killall': before all processes are killed
    - 'shutdown_swap': before swap-backend filesystems are unmounted
    - 'shutdown_umount': before all filesystems are unmounted
    - 'shutdown_poweroff': at the end of 'rc.shutdown'

The first word before the underscore represents the rc script in which the function is inserted,
the second word represends the action that will follow after the function. This is useful in
case you want to override, add or remove certain feature of the *initscripts*.

It is allowed to register several hook functions for the same 'hook' as in regular *Bash* script.
Is is also allowed to register the same hook function for several 'hooks'.

DAEMONS[[d]]
------------
Daemons are *Bash* scripts which run processes in the background to do their thing, waiting for
input, specifiec even to accure or something else. Those daemons can be started, stopped and/or
restarted when needed using the *rc.d* tool which is also provided by *initscripts* and are 
located in separate directory '/etc/rc.d'. More information about it in *rc.d*(8)

TODO: add info about dmn_* functions

FILES[[F]]
----------
'/etc/rc.sysinit'::
    System initialization script
    
'/etc/rc.single'::
    Single-user mode script
    
'/etc/rc.multi'::
    Multi-user mode script

'/etc/rc.shutdown'::
    System shutdown (halt or reboot)

'/etc/rc.d/functions'::
    Common functions and share-code script

'/etc/rc.d/functions.d'::
	Directory containing available functions on the system.

'/etc/rc.d'::
	Directory containing available daemons on the system.

'/usr/lib/initscripts'::
	Directory containing available initscripts plugins.

RESOURCES[[R]]
--------------
Arch Linux initscripts: http://projects.archlinux.org/initscripts.git

Initscripts fork: https://github.com/fluxer/initscripts

SEE ALSO[[s]]
-------------
*boot*(7), *init*(8), *inittab*(5), *bootlogd*(8), *mount*(8), *sysctl*(8), *udev*(7),
*modprobe*(8), *hwclock*(8),*lvm*(8), *btrfs*(8), *dmraid*(8), *fsck*(8), *urandom*(8),
*swapon*(8), *locale*(1), *loadkeys*(1), *setfont*(8), *hostname*(1), *ip*(8), *killall5*(8),
*rc.conf*(5), *rc.d*(8)

AUTHORS[[A]]
------------
Written by Sebastien Luttringer and Dave Reisner. Forked by Ivailo Monev.
